<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database1DataSet" targetNamespace="http://tempuri.org/Database1DataSet.xsd" xmlns:mstns="http://tempuri.org/Database1DataSet.xsd" xmlns="http://tempuri.org/Database1DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Database1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MenuAlpha.Properties.Settings.GlobalReference.Default.Database1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarkaTableAdapter" GeneratorDataComponentClassName="MarkaTableAdapter" Name="Marka" UserDataComponentName="MarkaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Marka" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Marka] WHERE (([ID] = @Original_ID) AND ([marka] = @Original_marka) AND ([TypID] = @Original_TypID) AND ((@IsNull_MarkaID = 1 AND [MarkaID] IS NULL) OR ([MarkaID] = @Original_MarkaID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_marka" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="marka" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Marka] ([marka], [TypID], [MarkaID]) VALUES (@marka, @TypID, @MarkaID);
SELECT ID, marka, TypID, MarkaID FROM Marka WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@marka" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="marka" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, marka, TypID, MarkaID FROM dbo.Marka</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Marka] SET [marka] = @marka, [TypID] = @TypID, [MarkaID] = @MarkaID WHERE (([ID] = @Original_ID) AND ([marka] = @Original_marka) AND ([TypID] = @Original_TypID) AND ((@IsNull_MarkaID = 1 AND [MarkaID] IS NULL) OR ([MarkaID] = @Original_MarkaID)));
SELECT ID, marka, TypID, MarkaID FROM Marka WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@marka" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="marka" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_marka" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="marka" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="[C:\USERS\PAWEL\ONEDRIVE\DOKUMENTY\WAT\C#\MENUALPHA\MENUALPHA\DATABASE1.MDF].dbo.Marka" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="marka" DataSetColumn="marka" />
              <Mapping SourceColumn="TypID" DataSetColumn="TypID" />
              <Mapping SourceColumn="MarkaID" DataSetColumn="MarkaID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MarkaAllTableAdapter" GeneratorDataComponentClassName="MarkaAllTableAdapter" Name="MarkaAll" UserDataComponentName="MarkaAllTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.MarkaAll" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MarkaAll] WHERE (([MID] = @Original_MID) AND ([MarkaAll] = @Original_MarkaAll))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MarkaAll" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MarkaAll" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MarkaAll] ([MarkaAll]) VALUES (@MarkaAll);
SELECT MID, MarkaAll FROM MarkaAll WHERE (MID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MarkaAll" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MarkaAll" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MID, MarkaAll FROM dbo.MarkaAll</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MarkaAll] SET [MarkaAll] = @MarkaAll WHERE (([MID] = @Original_MID) AND ([MarkaAll] = @Original_MarkaAll));
SELECT MID, MarkaAll FROM MarkaAll WHERE (MID = @MID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MarkaAll" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MarkaAll" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MarkaAll" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MarkaAll" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MID" ColumnName="MID" DataSourceName="[C:\USERS\PAWEL\ONEDRIVE\DOKUMENTY\WAT\C#\MENUALPHA\MENUALPHA\DATABASE1.MDF].dbo.MarkaAll" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MID" DataSetColumn="MID" />
              <Mapping SourceColumn="MarkaAll" DataSetColumn="MarkaAll" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ModelTableAdapter" GeneratorDataComponentClassName="ModelTableAdapter" Name="Model" UserDataComponentName="ModelTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Model" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Model] WHERE (([ModelID] = @Original_ModelID) AND ([model] = @Original_model) AND ([TypID] = @Original_TypID) AND ([MarkaID] = @Original_MarkaID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModelID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_model" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="model" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Model] ([model], [TypID], [MarkaID]) VALUES (@model, @TypID, @MarkaID);
SELECT ModelID, model, TypID, MarkaID FROM Model WHERE (ModelID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@model" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ModelID, model, TypID, MarkaID FROM dbo.Model</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Model] SET [model] = @model, [TypID] = @TypID, [MarkaID] = @MarkaID WHERE (([ModelID] = @Original_ModelID) AND ([model] = @Original_model) AND ([TypID] = @Original_TypID) AND ([MarkaID] = @Original_MarkaID));
SELECT ModelID, model, TypID, MarkaID FROM Model WHERE (ModelID = @ModelID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@model" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="model" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ModelID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ModelID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_model" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="model" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MarkaID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MarkaID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ModelID" ColumnName="ModelID" DataSourceName="[C:\USERS\PAWEL\ONEDRIVE\DOKUMENTY\WAT\C#\MENUALPHA\MENUALPHA\DATABASE1.MDF].dbo.Model" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ModelID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ModelID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ModelID" DataSetColumn="ModelID" />
              <Mapping SourceColumn="model" DataSetColumn="model" />
              <Mapping SourceColumn="TypID" DataSetColumn="TypID" />
              <Mapping SourceColumn="MarkaID" DataSetColumn="MarkaID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypTableAdapter" GeneratorDataComponentClassName="TypTableAdapter" Name="Typ" UserDataComponentName="TypTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.Typ" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Typ] WHERE (([TypID] = @Original_TypID) AND ([typ] = @Original_typ))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_typ" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="typ" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Typ] ([typ]) VALUES (@typ);
SELECT TypID, typ FROM Typ WHERE (TypID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@typ" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="typ" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TypID, typ FROM dbo.Typ</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Typ] SET [typ] = @typ WHERE (([TypID] = @Original_TypID) AND ([typ] = @Original_typ));
SELECT TypID, typ FROM Typ WHERE (TypID = @TypID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@typ" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="typ" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TypID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_typ" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="typ" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TypID" ColumnName="TypID" DataSourceName="[C:\USERS\PAWEL\ONEDRIVE\DOKUMENTY\WAT\C#\MENUALPHA\MENUALPHA\DATABASE1.MDF].dbo.Typ" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TypID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TypID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TypID" DataSetColumn="TypID" />
              <Mapping SourceColumn="typ" DataSetColumn="typ" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TypAllTableAdapter" GeneratorDataComponentClassName="TypAllTableAdapter" Name="TypAll" UserDataComponentName="TypAllTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.TypAll" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TypAll] WHERE (([TID] = @Original_TID) AND ([TypAll] = @Original_TypAll))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TypAll" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TypAll" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TypAll] ([TypAll]) VALUES (@TypAll);
SELECT TID, TypAll FROM TypAll WHERE (TID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TypAll" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TypAll" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TID, TypAll FROM dbo.TypAll</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TypAll] SET [TypAll] = @TypAll WHERE (([TID] = @Original_TID) AND ([TypAll] = @Original_TypAll));
SELECT TID, TypAll FROM TypAll WHERE (TID = @TID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TypAll" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TypAll" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TypAll" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TypAll" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TID" ColumnName="TID" DataSourceName="[C:\USERS\PAWEL\ONEDRIVE\DOKUMENTY\WAT\C#\MENUALPHA\MENUALPHA\DATABASE1.MDF].dbo.TypAll" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TID" DataSetColumn="TID" />
              <Mapping SourceColumn="TypAll" DataSetColumn="TypAll" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database1DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Database1DataSet" msprop:Generator_UserDSName="Database1DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Marka" msprop:Generator_TableClassName="MarkaDataTable" msprop:Generator_TableVarName="tableMarka" msprop:Generator_TablePropName="Marka" msprop:Generator_RowDeletingName="MarkaRowDeleting" msprop:Generator_RowChangingName="MarkaRowChanging" msprop:Generator_RowEvHandlerName="MarkaRowChangeEventHandler" msprop:Generator_RowDeletedName="MarkaRowDeleted" msprop:Generator_UserTableName="Marka" msprop:Generator_RowChangedName="MarkaRowChanged" msprop:Generator_RowEvArgName="MarkaRowChangeEvent" msprop:Generator_RowClassName="MarkaRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="marka" msprop:Generator_ColumnVarNameInTable="columnmarka" msprop:Generator_ColumnPropNameInRow="marka" msprop:Generator_ColumnPropNameInTable="markaColumn" msprop:Generator_UserColumnName="marka">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TypID" msprop:Generator_ColumnVarNameInTable="columnTypID" msprop:Generator_ColumnPropNameInRow="TypID" msprop:Generator_ColumnPropNameInTable="TypIDColumn" msprop:Generator_UserColumnName="TypID" type="xs:int" />
              <xs:element name="MarkaID" msprop:Generator_ColumnVarNameInTable="columnMarkaID" msprop:Generator_ColumnPropNameInRow="MarkaID" msprop:Generator_ColumnPropNameInTable="MarkaIDColumn" msprop:Generator_UserColumnName="MarkaID" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MarkaAll" msprop:Generator_TableClassName="MarkaAllDataTable" msprop:Generator_TableVarName="tableMarkaAll" msprop:Generator_TablePropName="MarkaAll" msprop:Generator_RowDeletingName="MarkaAllRowDeleting" msprop:Generator_RowChangingName="MarkaAllRowChanging" msprop:Generator_RowEvHandlerName="MarkaAllRowChangeEventHandler" msprop:Generator_RowDeletedName="MarkaAllRowDeleted" msprop:Generator_UserTableName="MarkaAll" msprop:Generator_RowChangedName="MarkaAllRowChanged" msprop:Generator_RowEvArgName="MarkaAllRowChangeEvent" msprop:Generator_RowClassName="MarkaAllRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMID" msprop:Generator_ColumnPropNameInRow="MID" msprop:Generator_ColumnPropNameInTable="MIDColumn" msprop:Generator_UserColumnName="MID" type="xs:int" />
              <xs:element name="MarkaAll" msprop:Generator_ColumnVarNameInTable="columnMarkaAll" msprop:Generator_ColumnPropNameInRow="MarkaAll" msprop:Generator_ColumnPropNameInTable="MarkaAllColumn" msprop:Generator_UserColumnName="MarkaAll">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Model" msprop:Generator_TableClassName="ModelDataTable" msprop:Generator_TableVarName="tableModel" msprop:Generator_TablePropName="Model" msprop:Generator_RowDeletingName="ModelRowDeleting" msprop:Generator_RowChangingName="ModelRowChanging" msprop:Generator_RowEvHandlerName="ModelRowChangeEventHandler" msprop:Generator_RowDeletedName="ModelRowDeleted" msprop:Generator_UserTableName="Model" msprop:Generator_RowChangedName="ModelRowChanged" msprop:Generator_RowEvArgName="ModelRowChangeEvent" msprop:Generator_RowClassName="ModelRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ModelID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnModelID" msprop:Generator_ColumnPropNameInRow="ModelID" msprop:Generator_ColumnPropNameInTable="ModelIDColumn" msprop:Generator_UserColumnName="ModelID" type="xs:int" />
              <xs:element name="model" msprop:Generator_ColumnVarNameInTable="columnmodel" msprop:Generator_ColumnPropNameInRow="model" msprop:Generator_ColumnPropNameInTable="modelColumn" msprop:Generator_UserColumnName="model">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TypID" msprop:Generator_ColumnVarNameInTable="columnTypID" msprop:Generator_ColumnPropNameInRow="TypID" msprop:Generator_ColumnPropNameInTable="TypIDColumn" msprop:Generator_UserColumnName="TypID" type="xs:int" />
              <xs:element name="MarkaID" msprop:Generator_ColumnVarNameInTable="columnMarkaID" msprop:Generator_ColumnPropNameInRow="MarkaID" msprop:Generator_ColumnPropNameInTable="MarkaIDColumn" msprop:Generator_UserColumnName="MarkaID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Typ" msprop:Generator_TableClassName="TypDataTable" msprop:Generator_TableVarName="tableTyp" msprop:Generator_TablePropName="Typ" msprop:Generator_RowDeletingName="TypRowDeleting" msprop:Generator_RowChangingName="TypRowChanging" msprop:Generator_RowEvHandlerName="TypRowChangeEventHandler" msprop:Generator_RowDeletedName="TypRowDeleted" msprop:Generator_UserTableName="Typ" msprop:Generator_RowChangedName="TypRowChanged" msprop:Generator_RowEvArgName="TypRowChangeEvent" msprop:Generator_RowClassName="TypRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TypID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTypID" msprop:Generator_ColumnPropNameInRow="TypID" msprop:Generator_ColumnPropNameInTable="TypIDColumn" msprop:Generator_UserColumnName="TypID" type="xs:int" />
              <xs:element name="typ" msprop:Generator_ColumnVarNameInTable="columntyp" msprop:Generator_ColumnPropNameInRow="typ" msprop:Generator_ColumnPropNameInTable="typColumn" msprop:Generator_UserColumnName="typ">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypAll" msprop:Generator_TableClassName="TypAllDataTable" msprop:Generator_TableVarName="tableTypAll" msprop:Generator_TablePropName="TypAll" msprop:Generator_RowDeletingName="TypAllRowDeleting" msprop:Generator_RowChangingName="TypAllRowChanging" msprop:Generator_RowEvHandlerName="TypAllRowChangeEventHandler" msprop:Generator_RowDeletedName="TypAllRowDeleted" msprop:Generator_UserTableName="TypAll" msprop:Generator_RowChangedName="TypAllRowChanged" msprop:Generator_RowEvArgName="TypAllRowChangeEvent" msprop:Generator_RowClassName="TypAllRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTID" msprop:Generator_ColumnPropNameInRow="TID" msprop:Generator_ColumnPropNameInTable="TIDColumn" msprop:Generator_UserColumnName="TID" type="xs:int" />
              <xs:element name="TypAll" msprop:Generator_ColumnVarNameInTable="columnTypAll" msprop:Generator_ColumnPropNameInRow="TypAll" msprop:Generator_ColumnPropNameInTable="TypAllColumn" msprop:Generator_UserColumnName="TypAll">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Marka" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="MarkaAll_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MarkaAll" />
      <xs:field xpath="mstns:MID" />
    </xs:unique>
    <xs:unique name="Model_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Model" />
      <xs:field xpath="mstns:ModelID" />
    </xs:unique>
    <xs:unique name="Typ_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Typ" />
      <xs:field xpath="mstns:TypID" />
    </xs:unique>
    <xs:unique name="TypAll_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TypAll" />
      <xs:field xpath="mstns:TID" />
    </xs:unique>
  </xs:element>
</xs:schema>